if [[ -z "$ZSH_CONFIG" ]]; then
    echo "You need to set the ZSH_CONFIG env variable to the path where"
    echo "the zsh config is located. You can do that in ~/.zshenv or in"
    echo "~/.extra-env.zsh"
fi

# Utilities for setting up zsh (functions to check for commands existence and
# other stuff like that).
source "$ZSH_CONFIG/lib/config-utils.zsh"

# Stuff that doesn't export environment variables (those go in .zshenv).
source "$ZSH_CONFIG/lib/fpath.zsh"
source "$ZSH_CONFIG/lib/options.zsh"
source "$ZSH_CONFIG/lib/zstyle.zsh"
source "$ZSH_CONFIG/lib/keybindings.zsh"
source "$ZSH_CONFIG/lib/autoloads.zsh"
source "$ZSH_CONFIG/lib/aliases.zsh"

chpwd_elixir_hook() {
  if [[ -s "$PWD/.elixir-version" ]]; then
    kiex use $(cat "$PWD/.elixir-version")
  fi
}

add-zsh-hook chpwd chpwd_elixir_hook

# Source antigen bundles and apply everything
source $(brew --prefix)/share/antigen/antigen.zsh
antigen bundle zsh-users/zsh-completions src
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search
antigen bundle hlissner/zsh-autopair
antigen apply

# Source non version controlled files only if they exist.
[[ -s "$HOME/.extra.zsh" ]] && source "$HOME/.extra.zsh"

# Choose the prompt.
prompt ${ZSH_PROMPT:-freedom}

# Use Ctrl-s everywhere. In vim for example.
stty -ixon