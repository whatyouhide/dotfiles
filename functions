# Add an alias to zsh/extra, so that it's not version controlled and can
# be used in a workstation-specific way.
add-alias() {
  echo "alias $1=\"$2\"" >> "$DOTFILES/zsh/extra"
  source ~/.zshrc
}


# Use Ctrl-z to switch back to vim.
# Look in `zsh/keybindings` for the place where this is used.
fancy-ctrl-z() {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}


# Create a directory and cd into it.
md() {
  mkdir -p "$1" && cd "$1"
}


# This is wonderful. Combine `mkdir -p` and `touch`:
# $ mktouch ~/this/dir/doesnt/exist/and-neither-this-file.txt
mktouch() {
  mkdir -p "$(dirname "$1")"
  touch "$1"
}


# Use git in a cooler way: 'g' for status, g {args} for normal git.
# 'compdef' ensures the same git completion works when using 'g' too.
# If 'hub' is available, use 'hub' as git.
compdef g=git
g() {
  local git_or_hub='git'
  type hub >/dev/null 2>&1 && git_or_hub='hub'

  if [[ $# > 0 ]]; then
    command "$git_or_hub" $@
  else
    command "$git_or_hub" status
  fi
}


# Simple python server from the current directory.
server() {
  local port="${1:-8000}"
  open "http://localhost:${port}/"
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}
