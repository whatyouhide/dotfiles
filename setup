#!/bin/bash

set -e

echo_colored() { echo -e "${2}$1\033[0m"; }
fail()         { echo_colored "$1" "\033[1;31m"; exit 1; }
echo_info()    { echo_colored "==> $1" "\033[1;36m"; }

check_env_variables() {
  [[ -n "$DOTFILES" ]] || fail 'The $DOTFILES env variable is not set'
}

create_directories() {
    echo_info "Creating a bunch of directories"
    mkdir -p "$HOME/bin" && echo "Created ~/bin"
    mkdir -p "$HOME/tmp" && echo "Created ~/tmp"
}

symlink_files() {
  echo_info "Symlinking all files ending in '.symlink'"
  local _files=$(find $DOTFILES -name '*.symlink')

  for abs_file in $_files; do
    local _symlinked=".$(basename ${abs_file%.symlink})"
    ln -sfv "$abs_file" "$HOME/$_symlinked"
  done
  echo
}

copy_example_files() {
    echo_info "Copying all files ending in '.example'"
    local _files=$(find $DOTFILES -name '*.example')

    for abs_file in $_files; do
        local _dst="$HOME/.$(basename ${abs_file%.example})"

        if [[ -s "$_dst" ]]; then
            echo "File $_dst exists and will not be overridden"
        else
            cp -v "$abs_file" "$_dst"
        fi
    done
    echo
}

run_install_scripts() {
  for file in $(find $DOTFILES -name 'install.sh'); do
    echo_info "Running ${file#$DOTFILES/}"
    bash "$file"
  done
  echo
}

print_todos() {
    echo_info "Remember to do these:"
    echo "Set the git email in ~/.gitconfig (git config --global user.email foo@bar)"
    echo "Set the git name in ~/.gitconfig (git config --global user.name ...)"
    echo "Set the GitHub config according to https://github.com/blog/180-local-github-config"
}

main() {
    check_env_variables
    create_directories
    symlink_files
    copy_example_files
    run_install_scripts
    print_todos
}

main "$@"
