#!/bin/bash

REPO_URL='https://github.com/whatyouhide/dotfiles.git'

# Utility functions.
echo_colored() { echo -e "${2}$1\033[0m"; }
echo_info()    { echo -n '==> '; echo_colored "$1" "\033[1;36m"; }
fail()         { echo_colored "$1" "\033[1;31m" && exit 1; }
newline()      { echo; }
exists()       { type "$1" >/dev/null 2>&1; }
is_osx()       { [[ $(uname) == 'Darwin' ]]; }


change_shell_to_zsh() {
  [[ "$SHELL" =~ 'zsh' ]] || chsh -s "$(which zsh)" "$(whoami)"
}

clone_dotfiles() {
  [[ -e "$DOTFILES" ]] && return
  echo_info 'Cloning dotfiles from GitHub'
  [[ -e "$DOTFILES" ]] || command git clone "$REPO_URL" "$DOTFILES" && newline
}

ensure_xcode() {
  echo_info 'I need to be sure you installed the command-line tools and agreed'
  echo_info 'to the Xcode license. After installing Xcode, do:'
  echo      '  xcode-select --install'
  echo      '  sudo xcodebuild -license'
  read -p 'Did you? [yn] ' -n 1 < /dev/tty
  newline

  [[ $REPLY == "y" ]] || exit 0
}

install_homebrew() {
  exists brew && return
  echo_info "Installing Homebrew"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  newline
}

check_for_stuff() {
  [[ -z "$DOTFILES" ]] && fail '$DOTFILES is not set'
  exists git || fail 'git is required but not installed'
  exists zsh || fail 'zsh is required but not installed'
  is_osx && ensure_xcode
}

main() {
  check_for_stuff
  clone_dotfiles
  change_shell_to_zsh
  is_osx && install_homebrew
}

main "$@"
